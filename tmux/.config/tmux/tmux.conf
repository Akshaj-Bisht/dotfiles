### ── Terminal Compatibility ─────────────────────────
set-option -sa terminal-overrides ",ghostty*:Tc"   # Enable truecolor for Ghostty

### ── General Settings ───────────────────────────────
set -g mouse on                                     # Enable mouse support
set -g base-index 1                                 # Start windows at 1
set -g pane-base-index 1                            # Start panes at 1
set -g renumber-windows on                          # Renumber windows after closing

### ── Prefix and Keybindings ────────────────────────
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Config Reloaded ✔"

# Pane selection (vim-style)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Splits with current working directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Alt + Arrow keys (no prefix)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Alt + H/L to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# Prefix + Arrows (fallback window navigation)
bind Left previous-window
bind Right next-window

# Alt + number — jump or create window
bind -n M-1 if-shell '[ "$(tmux list-windows | grep ^1:)" ]' 'select-window -t 1' 'new-window -t 1'
bind -n M-2 if-shell '[ "$(tmux list-windows | grep ^2:)" ]' 'select-window -t 2' 'new-window -t 2'
bind -n M-3 if-shell '[ "$(tmux list-windows | grep ^3:)" ]' 'select-window -t 3' 'new-window -t 3'
bind -n M-4 if-shell '[ "$(tmux list-windows | grep ^4:)" ]' 'select-window -t 4' 'new-window -t 4'
bind -n M-5 if-shell '[ "$(tmux list-windows | grep ^5:)" ]' 'select-window -t 5' 'new-window -t 5'
bind -n M-6 if-shell '[ "$(tmux list-windows | grep ^6:)" ]' 'select-window -t 6' 'new-window -t 6'
bind -n M-7 if-shell '[ "$(tmux list-windows | grep ^7:)" ]' 'select-window -t 7' 'new-window -t 7'
bind -n M-8 if-shell '[ "$(tmux list-windows | grep ^8:)" ]' 'select-window -t 8' 'new-window -t 8'
bind -n M-9 if-shell '[ "$(tmux list-windows | grep ^9:)" ]' 'select-window -t 9' 'new-window -t 9'
bind -n M-0 if-shell '[ "$(tmux list-windows | grep ^0:)" ]' 'select-window -t 0' 'new-window -t 0'

### ── Copy Mode (vi-style) ──────────────────────────
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

### ── Plugins & Session Management ──────────────────

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'omerxx/tmux-session-manager'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'catppuccin/tmux#v2.1.3'
set -g @continuum-restore 'on'
set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha
set -g @plugin 'tmux-plugins/tpm'

# Save & restore bindings (using tmux-resurrect)
bind s run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh
bind r run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh

# FZF-powered fuzzy finders
bind-key F run-shell '~/.tmux/plugins/tmux-fzf/scripts/window.sh'
bind-key P run-shell '~/.tmux/plugins/tmux-fzf/scripts/pane.sh'
bind-key T run-shell '~/.tmux/plugins/tmux-fzf/scripts/session.sh'


### ── Cheat Sheet Command (via alias) ─────────────────
# Make sure `less` is installed: sudo pacman -S less
set -s command-alias[100] cheat="run-shell 'bash ~/.config/tmux/.tmux-keybinds.sh | less -R'"


### ── Initialize TPM (must be last) ──────────────────
run '~/.tmux/plugins/tpm/tpm'
